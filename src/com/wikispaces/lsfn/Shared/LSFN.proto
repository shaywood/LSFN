option java_package = "com.wikispaces.lsfn.Shared";
option java_outer_classname = "LSFN";

message Subscribe {
    repeated int32 inputSubscriptionIDs = 1;
    repeated int32 outputSubscriptionIDs = 2;
}

message SubscriptionsAvailable {
    message ValueDetails {
        required string name = 1;
        required int32 ID = 2;
    }
    repeated ValueDetails inputSubscriptionIDs = 1;
    repeated ValueDetails outputSubscriptionIDs = 2;
}

message IS {
    // From Interface to Ship
    
    enum Handshake {
        HELLO = 0;
    }
    
    // Subscribable input message types go here
    
    optional Handshake handshake = 16;
    optional Subscribe subscribe = 17;
    optional string rcon = 18;
    
    // Subscribable input message declarations go here
}

message SI {
    // From Ship to Interface
    
    message Handshake {
        // This is a response to the same named message in the IS protocol.
        enum Type {
            HELLO = 0;
            GOODBYE = 1;
        }
        required Type type = 1;
        optional int32 intID = 2; // If HELLO then we send the player their ID (unique on the SHIP) as well.
    }

    // Subscribable message types go here

    optional Handshake handshake = 16;
    optional SubscriptionsAvailable subscriptionsAvailable = 17;
    
    // Subscribable message declarations go here 
}

message SE {
    // From Ship to Environment

    enum Handshake {
        HELLO = 0;
    }
    
    // Subscribable input message types go here
    
    optional Handshake handshake = 16;
    optional Subscribe subscribe = 17;
    optional string rcon = 18;
    
    // Subscribable input message declarations go here
}

message ES {
    // from Environment to Ship

    message Handshake {
        // This is a response to the same named message in the IS protocol.
        enum Type {
            HELLO = 0;
            GOODBYE = 1;
        }
        required Type type = 1;
        optional int32 shipID = 2; // If HELLO then we send the ship their ID (unique on the ENV) as well.
    }
    
    // Subscribable message types go here
    
    optional Handshake handshake = 16;
    optional SubscriptionsAvailable subscriptionsAvailable = 17;
    
    // Subscribable message declarations go here
}