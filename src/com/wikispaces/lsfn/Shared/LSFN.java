// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/wikispaces/lsfn/Shared/LSFN.proto

package com.wikispaces.lsfn.Shared;

public final class LSFN {
  private LSFN() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SubscribeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated int32 inputSubscriptionIDs = 1;
    java.util.List<java.lang.Integer> getInputSubscriptionIDsList();
    int getInputSubscriptionIDsCount();
    int getInputSubscriptionIDs(int index);
    
    // repeated int32 outputSubscriptionIDs = 2;
    java.util.List<java.lang.Integer> getOutputSubscriptionIDsList();
    int getOutputSubscriptionIDsCount();
    int getOutputSubscriptionIDs(int index);
  }
  public static final class Subscribe extends
      com.google.protobuf.GeneratedMessage
      implements SubscribeOrBuilder {
    // Use Subscribe.newBuilder() to construct.
    private Subscribe(Builder builder) {
      super(builder);
    }
    private Subscribe(boolean noInit) {}
    
    private static final Subscribe defaultInstance;
    public static Subscribe getDefaultInstance() {
      return defaultInstance;
    }
    
    public Subscribe getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_Subscribe_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_Subscribe_fieldAccessorTable;
    }
    
    // repeated int32 inputSubscriptionIDs = 1;
    public static final int INPUTSUBSCRIPTIONIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> inputSubscriptionIDs_;
    public java.util.List<java.lang.Integer>
        getInputSubscriptionIDsList() {
      return inputSubscriptionIDs_;
    }
    public int getInputSubscriptionIDsCount() {
      return inputSubscriptionIDs_.size();
    }
    public int getInputSubscriptionIDs(int index) {
      return inputSubscriptionIDs_.get(index);
    }
    
    // repeated int32 outputSubscriptionIDs = 2;
    public static final int OUTPUTSUBSCRIPTIONIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> outputSubscriptionIDs_;
    public java.util.List<java.lang.Integer>
        getOutputSubscriptionIDsList() {
      return outputSubscriptionIDs_;
    }
    public int getOutputSubscriptionIDsCount() {
      return outputSubscriptionIDs_.size();
    }
    public int getOutputSubscriptionIDs(int index) {
      return outputSubscriptionIDs_.get(index);
    }
    
    private void initFields() {
      inputSubscriptionIDs_ = java.util.Collections.emptyList();;
      outputSubscriptionIDs_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < inputSubscriptionIDs_.size(); i++) {
        output.writeInt32(1, inputSubscriptionIDs_.get(i));
      }
      for (int i = 0; i < outputSubscriptionIDs_.size(); i++) {
        output.writeInt32(2, outputSubscriptionIDs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < inputSubscriptionIDs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputSubscriptionIDs_.get(i));
        }
        size += dataSize;
        size += 1 * getInputSubscriptionIDsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputSubscriptionIDs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outputSubscriptionIDs_.get(i));
        }
        size += dataSize;
        size += 1 * getOutputSubscriptionIDsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.Subscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.Subscribe prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_Subscribe_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_Subscribe_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.Subscribe.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        inputSubscriptionIDs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        outputSubscriptionIDs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe build() {
        com.wikispaces.lsfn.Shared.LSFN.Subscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.Subscribe buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.Subscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.Subscribe result = new com.wikispaces.lsfn.Shared.LSFN.Subscribe(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          inputSubscriptionIDs_ = java.util.Collections.unmodifiableList(inputSubscriptionIDs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inputSubscriptionIDs_ = inputSubscriptionIDs_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          outputSubscriptionIDs_ = java.util.Collections.unmodifiableList(outputSubscriptionIDs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outputSubscriptionIDs_ = outputSubscriptionIDs_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.Subscribe) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.Subscribe)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.Subscribe other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance()) return this;
        if (!other.inputSubscriptionIDs_.isEmpty()) {
          if (inputSubscriptionIDs_.isEmpty()) {
            inputSubscriptionIDs_ = other.inputSubscriptionIDs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputSubscriptionIDsIsMutable();
            inputSubscriptionIDs_.addAll(other.inputSubscriptionIDs_);
          }
          onChanged();
        }
        if (!other.outputSubscriptionIDs_.isEmpty()) {
          if (outputSubscriptionIDs_.isEmpty()) {
            outputSubscriptionIDs_ = other.outputSubscriptionIDs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputSubscriptionIDsIsMutable();
            outputSubscriptionIDs_.addAll(other.outputSubscriptionIDs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureInputSubscriptionIDsIsMutable();
              inputSubscriptionIDs_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInputSubscriptionIDs(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              ensureOutputSubscriptionIDsIsMutable();
              outputSubscriptionIDs_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addOutputSubscriptionIDs(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated int32 inputSubscriptionIDs = 1;
      private java.util.List<java.lang.Integer> inputSubscriptionIDs_ = java.util.Collections.emptyList();;
      private void ensureInputSubscriptionIDsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          inputSubscriptionIDs_ = new java.util.ArrayList<java.lang.Integer>(inputSubscriptionIDs_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getInputSubscriptionIDsList() {
        return java.util.Collections.unmodifiableList(inputSubscriptionIDs_);
      }
      public int getInputSubscriptionIDsCount() {
        return inputSubscriptionIDs_.size();
      }
      public int getInputSubscriptionIDs(int index) {
        return inputSubscriptionIDs_.get(index);
      }
      public Builder setInputSubscriptionIDs(
          int index, int value) {
        ensureInputSubscriptionIDsIsMutable();
        inputSubscriptionIDs_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInputSubscriptionIDs(int value) {
        ensureInputSubscriptionIDsIsMutable();
        inputSubscriptionIDs_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInputSubscriptionIDs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputSubscriptionIDsIsMutable();
        super.addAll(values, inputSubscriptionIDs_);
        onChanged();
        return this;
      }
      public Builder clearInputSubscriptionIDs() {
        inputSubscriptionIDs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated int32 outputSubscriptionIDs = 2;
      private java.util.List<java.lang.Integer> outputSubscriptionIDs_ = java.util.Collections.emptyList();;
      private void ensureOutputSubscriptionIDsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          outputSubscriptionIDs_ = new java.util.ArrayList<java.lang.Integer>(outputSubscriptionIDs_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getOutputSubscriptionIDsList() {
        return java.util.Collections.unmodifiableList(outputSubscriptionIDs_);
      }
      public int getOutputSubscriptionIDsCount() {
        return outputSubscriptionIDs_.size();
      }
      public int getOutputSubscriptionIDs(int index) {
        return outputSubscriptionIDs_.get(index);
      }
      public Builder setOutputSubscriptionIDs(
          int index, int value) {
        ensureOutputSubscriptionIDsIsMutable();
        outputSubscriptionIDs_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addOutputSubscriptionIDs(int value) {
        ensureOutputSubscriptionIDsIsMutable();
        outputSubscriptionIDs_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllOutputSubscriptionIDs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutputSubscriptionIDsIsMutable();
        super.addAll(values, outputSubscriptionIDs_);
        onChanged();
        return this;
      }
      public Builder clearOutputSubscriptionIDs() {
        outputSubscriptionIDs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Subscribe)
    }
    
    static {
      defaultInstance = new Subscribe(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Subscribe)
  }
  
  public interface SubscriptionsAvailableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .SubscriptionsAvailable.ValueDetails inputSubscriptionIDs = 1;
    java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> 
        getInputSubscriptionIDsList();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getInputSubscriptionIDs(int index);
    int getInputSubscriptionIDsCount();
    java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
        getInputSubscriptionIDsOrBuilderList();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getInputSubscriptionIDsOrBuilder(
        int index);
    
    // repeated .SubscriptionsAvailable.ValueDetails outputSubscriptionIDs = 2;
    java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> 
        getOutputSubscriptionIDsList();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getOutputSubscriptionIDs(int index);
    int getOutputSubscriptionIDsCount();
    java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
        getOutputSubscriptionIDsOrBuilderList();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getOutputSubscriptionIDsOrBuilder(
        int index);
  }
  public static final class SubscriptionsAvailable extends
      com.google.protobuf.GeneratedMessage
      implements SubscriptionsAvailableOrBuilder {
    // Use SubscriptionsAvailable.newBuilder() to construct.
    private SubscriptionsAvailable(Builder builder) {
      super(builder);
    }
    private SubscriptionsAvailable(boolean noInit) {}
    
    private static final SubscriptionsAvailable defaultInstance;
    public static SubscriptionsAvailable getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscriptionsAvailable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_fieldAccessorTable;
    }
    
    public interface ValueDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string name = 1;
      boolean hasName();
      String getName();
      
      // required int32 ID = 2;
      boolean hasID();
      int getID();
    }
    public static final class ValueDetails extends
        com.google.protobuf.GeneratedMessage
        implements ValueDetailsOrBuilder {
      // Use ValueDetails.newBuilder() to construct.
      private ValueDetails(Builder builder) {
        super(builder);
      }
      private ValueDetails(boolean noInit) {}
      
      private static final ValueDetails defaultInstance;
      public static ValueDetails getDefaultInstance() {
        return defaultInstance;
      }
      
      public ValueDetails getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_ValueDetails_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_ValueDetails_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            name_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required int32 ID = 2;
      public static final int ID_FIELD_NUMBER = 2;
      private int iD_;
      public boolean hasID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getID() {
        return iD_;
      }
      
      private void initFields() {
        name_ = "";
        iD_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasID()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, iD_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, iD_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_ValueDetails_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_ValueDetails_fieldAccessorTable;
        }
        
        // Construct using com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          iD_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDescriptor();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getDefaultInstanceForType() {
          return com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails build() {
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails buildPartial() {
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails result = new com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.iD_ = iD_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails) {
            return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails other) {
          if (other == com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasID()) {
            setID(other.getID());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasID()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                iD_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string name = 1;
        private java.lang.Object name_ = "";
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        void setName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
        }
        
        // required int32 ID = 2;
        private int iD_ ;
        public boolean hasID() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getID() {
          return iD_;
        }
        public Builder setID(int value) {
          bitField0_ |= 0x00000002;
          iD_ = value;
          onChanged();
          return this;
        }
        public Builder clearID() {
          bitField0_ = (bitField0_ & ~0x00000002);
          iD_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:SubscriptionsAvailable.ValueDetails)
      }
      
      static {
        defaultInstance = new ValueDetails(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:SubscriptionsAvailable.ValueDetails)
    }
    
    // repeated .SubscriptionsAvailable.ValueDetails inputSubscriptionIDs = 1;
    public static final int INPUTSUBSCRIPTIONIDS_FIELD_NUMBER = 1;
    private java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> inputSubscriptionIDs_;
    public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> getInputSubscriptionIDsList() {
      return inputSubscriptionIDs_;
    }
    public java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
        getInputSubscriptionIDsOrBuilderList() {
      return inputSubscriptionIDs_;
    }
    public int getInputSubscriptionIDsCount() {
      return inputSubscriptionIDs_.size();
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getInputSubscriptionIDs(int index) {
      return inputSubscriptionIDs_.get(index);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getInputSubscriptionIDsOrBuilder(
        int index) {
      return inputSubscriptionIDs_.get(index);
    }
    
    // repeated .SubscriptionsAvailable.ValueDetails outputSubscriptionIDs = 2;
    public static final int OUTPUTSUBSCRIPTIONIDS_FIELD_NUMBER = 2;
    private java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> outputSubscriptionIDs_;
    public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> getOutputSubscriptionIDsList() {
      return outputSubscriptionIDs_;
    }
    public java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
        getOutputSubscriptionIDsOrBuilderList() {
      return outputSubscriptionIDs_;
    }
    public int getOutputSubscriptionIDsCount() {
      return outputSubscriptionIDs_.size();
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getOutputSubscriptionIDs(int index) {
      return outputSubscriptionIDs_.get(index);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getOutputSubscriptionIDsOrBuilder(
        int index) {
      return outputSubscriptionIDs_.get(index);
    }
    
    private void initFields() {
      inputSubscriptionIDs_ = java.util.Collections.emptyList();
      outputSubscriptionIDs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getInputSubscriptionIDsCount(); i++) {
        if (!getInputSubscriptionIDs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOutputSubscriptionIDsCount(); i++) {
        if (!getOutputSubscriptionIDs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < inputSubscriptionIDs_.size(); i++) {
        output.writeMessage(1, inputSubscriptionIDs_.get(i));
      }
      for (int i = 0; i < outputSubscriptionIDs_.size(); i++) {
        output.writeMessage(2, outputSubscriptionIDs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < inputSubscriptionIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, inputSubscriptionIDs_.get(i));
      }
      for (int i = 0; i < outputSubscriptionIDs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, outputSubscriptionIDs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SubscriptionsAvailable_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInputSubscriptionIDsFieldBuilder();
          getOutputSubscriptionIDsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (inputSubscriptionIDsBuilder_ == null) {
          inputSubscriptionIDs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inputSubscriptionIDsBuilder_.clear();
        }
        if (outputSubscriptionIDsBuilder_ == null) {
          outputSubscriptionIDs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outputSubscriptionIDsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable build() {
        com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable result = new com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable(this);
        int from_bitField0_ = bitField0_;
        if (inputSubscriptionIDsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            inputSubscriptionIDs_ = java.util.Collections.unmodifiableList(inputSubscriptionIDs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inputSubscriptionIDs_ = inputSubscriptionIDs_;
        } else {
          result.inputSubscriptionIDs_ = inputSubscriptionIDsBuilder_.build();
        }
        if (outputSubscriptionIDsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            outputSubscriptionIDs_ = java.util.Collections.unmodifiableList(outputSubscriptionIDs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outputSubscriptionIDs_ = outputSubscriptionIDs_;
        } else {
          result.outputSubscriptionIDs_ = outputSubscriptionIDsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance()) return this;
        if (inputSubscriptionIDsBuilder_ == null) {
          if (!other.inputSubscriptionIDs_.isEmpty()) {
            if (inputSubscriptionIDs_.isEmpty()) {
              inputSubscriptionIDs_ = other.inputSubscriptionIDs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInputSubscriptionIDsIsMutable();
              inputSubscriptionIDs_.addAll(other.inputSubscriptionIDs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputSubscriptionIDs_.isEmpty()) {
            if (inputSubscriptionIDsBuilder_.isEmpty()) {
              inputSubscriptionIDsBuilder_.dispose();
              inputSubscriptionIDsBuilder_ = null;
              inputSubscriptionIDs_ = other.inputSubscriptionIDs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              inputSubscriptionIDsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInputSubscriptionIDsFieldBuilder() : null;
            } else {
              inputSubscriptionIDsBuilder_.addAllMessages(other.inputSubscriptionIDs_);
            }
          }
        }
        if (outputSubscriptionIDsBuilder_ == null) {
          if (!other.outputSubscriptionIDs_.isEmpty()) {
            if (outputSubscriptionIDs_.isEmpty()) {
              outputSubscriptionIDs_ = other.outputSubscriptionIDs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOutputSubscriptionIDsIsMutable();
              outputSubscriptionIDs_.addAll(other.outputSubscriptionIDs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputSubscriptionIDs_.isEmpty()) {
            if (outputSubscriptionIDsBuilder_.isEmpty()) {
              outputSubscriptionIDsBuilder_.dispose();
              outputSubscriptionIDsBuilder_ = null;
              outputSubscriptionIDs_ = other.outputSubscriptionIDs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              outputSubscriptionIDsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutputSubscriptionIDsFieldBuilder() : null;
            } else {
              outputSubscriptionIDsBuilder_.addAllMessages(other.outputSubscriptionIDs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getInputSubscriptionIDsCount(); i++) {
          if (!getInputSubscriptionIDs(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOutputSubscriptionIDsCount(); i++) {
          if (!getOutputSubscriptionIDs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInputSubscriptionIDs(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOutputSubscriptionIDs(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .SubscriptionsAvailable.ValueDetails inputSubscriptionIDs = 1;
      private java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> inputSubscriptionIDs_ =
        java.util.Collections.emptyList();
      private void ensureInputSubscriptionIDsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          inputSubscriptionIDs_ = new java.util.ArrayList<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails>(inputSubscriptionIDs_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> inputSubscriptionIDsBuilder_;
      
      public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> getInputSubscriptionIDsList() {
        if (inputSubscriptionIDsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputSubscriptionIDs_);
        } else {
          return inputSubscriptionIDsBuilder_.getMessageList();
        }
      }
      public int getInputSubscriptionIDsCount() {
        if (inputSubscriptionIDsBuilder_ == null) {
          return inputSubscriptionIDs_.size();
        } else {
          return inputSubscriptionIDsBuilder_.getCount();
        }
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getInputSubscriptionIDs(int index) {
        if (inputSubscriptionIDsBuilder_ == null) {
          return inputSubscriptionIDs_.get(index);
        } else {
          return inputSubscriptionIDsBuilder_.getMessage(index);
        }
      }
      public Builder setInputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (inputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.set(index, value);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setInputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (inputSubscriptionIDsBuilder_ == null) {
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addInputSubscriptionIDs(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (inputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.add(value);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addInputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (inputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.add(index, value);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addInputSubscriptionIDs(
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (inputSubscriptionIDsBuilder_ == null) {
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.add(builderForValue.build());
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addInputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (inputSubscriptionIDsBuilder_ == null) {
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllInputSubscriptionIDs(
          java.lang.Iterable<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> values) {
        if (inputSubscriptionIDsBuilder_ == null) {
          ensureInputSubscriptionIDsIsMutable();
          super.addAll(values, inputSubscriptionIDs_);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearInputSubscriptionIDs() {
        if (inputSubscriptionIDsBuilder_ == null) {
          inputSubscriptionIDs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.clear();
        }
        return this;
      }
      public Builder removeInputSubscriptionIDs(int index) {
        if (inputSubscriptionIDsBuilder_ == null) {
          ensureInputSubscriptionIDsIsMutable();
          inputSubscriptionIDs_.remove(index);
          onChanged();
        } else {
          inputSubscriptionIDsBuilder_.remove(index);
        }
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder getInputSubscriptionIDsBuilder(
          int index) {
        return getInputSubscriptionIDsFieldBuilder().getBuilder(index);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getInputSubscriptionIDsOrBuilder(
          int index) {
        if (inputSubscriptionIDsBuilder_ == null) {
          return inputSubscriptionIDs_.get(index);  } else {
          return inputSubscriptionIDsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
           getInputSubscriptionIDsOrBuilderList() {
        if (inputSubscriptionIDsBuilder_ != null) {
          return inputSubscriptionIDsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputSubscriptionIDs_);
        }
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder addInputSubscriptionIDsBuilder() {
        return getInputSubscriptionIDsFieldBuilder().addBuilder(
            com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance());
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder addInputSubscriptionIDsBuilder(
          int index) {
        return getInputSubscriptionIDsFieldBuilder().addBuilder(
            index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance());
      }
      public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder> 
           getInputSubscriptionIDsBuilderList() {
        return getInputSubscriptionIDsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
          getInputSubscriptionIDsFieldBuilder() {
        if (inputSubscriptionIDsBuilder_ == null) {
          inputSubscriptionIDsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder>(
                  inputSubscriptionIDs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          inputSubscriptionIDs_ = null;
        }
        return inputSubscriptionIDsBuilder_;
      }
      
      // repeated .SubscriptionsAvailable.ValueDetails outputSubscriptionIDs = 2;
      private java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> outputSubscriptionIDs_ =
        java.util.Collections.emptyList();
      private void ensureOutputSubscriptionIDsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          outputSubscriptionIDs_ = new java.util.ArrayList<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails>(outputSubscriptionIDs_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> outputSubscriptionIDsBuilder_;
      
      public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> getOutputSubscriptionIDsList() {
        if (outputSubscriptionIDsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputSubscriptionIDs_);
        } else {
          return outputSubscriptionIDsBuilder_.getMessageList();
        }
      }
      public int getOutputSubscriptionIDsCount() {
        if (outputSubscriptionIDsBuilder_ == null) {
          return outputSubscriptionIDs_.size();
        } else {
          return outputSubscriptionIDsBuilder_.getCount();
        }
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails getOutputSubscriptionIDs(int index) {
        if (outputSubscriptionIDsBuilder_ == null) {
          return outputSubscriptionIDs_.get(index);
        } else {
          return outputSubscriptionIDsBuilder_.getMessage(index);
        }
      }
      public Builder setOutputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (outputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.set(index, value);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setOutputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (outputSubscriptionIDsBuilder_ == null) {
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addOutputSubscriptionIDs(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (outputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.add(value);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addOutputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails value) {
        if (outputSubscriptionIDsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.add(index, value);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addOutputSubscriptionIDs(
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (outputSubscriptionIDsBuilder_ == null) {
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.add(builderForValue.build());
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addOutputSubscriptionIDs(
          int index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder builderForValue) {
        if (outputSubscriptionIDsBuilder_ == null) {
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllOutputSubscriptionIDs(
          java.lang.Iterable<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails> values) {
        if (outputSubscriptionIDsBuilder_ == null) {
          ensureOutputSubscriptionIDsIsMutable();
          super.addAll(values, outputSubscriptionIDs_);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearOutputSubscriptionIDs() {
        if (outputSubscriptionIDsBuilder_ == null) {
          outputSubscriptionIDs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.clear();
        }
        return this;
      }
      public Builder removeOutputSubscriptionIDs(int index) {
        if (outputSubscriptionIDsBuilder_ == null) {
          ensureOutputSubscriptionIDsIsMutable();
          outputSubscriptionIDs_.remove(index);
          onChanged();
        } else {
          outputSubscriptionIDsBuilder_.remove(index);
        }
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder getOutputSubscriptionIDsBuilder(
          int index) {
        return getOutputSubscriptionIDsFieldBuilder().getBuilder(index);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder getOutputSubscriptionIDsOrBuilder(
          int index) {
        if (outputSubscriptionIDsBuilder_ == null) {
          return outputSubscriptionIDs_.get(index);  } else {
          return outputSubscriptionIDsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
           getOutputSubscriptionIDsOrBuilderList() {
        if (outputSubscriptionIDsBuilder_ != null) {
          return outputSubscriptionIDsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputSubscriptionIDs_);
        }
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder addOutputSubscriptionIDsBuilder() {
        return getOutputSubscriptionIDsFieldBuilder().addBuilder(
            com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance());
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder addOutputSubscriptionIDsBuilder(
          int index) {
        return getOutputSubscriptionIDsFieldBuilder().addBuilder(
            index, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.getDefaultInstance());
      }
      public java.util.List<com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder> 
           getOutputSubscriptionIDsBuilderList() {
        return getOutputSubscriptionIDsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder> 
          getOutputSubscriptionIDsFieldBuilder() {
        if (outputSubscriptionIDsBuilder_ == null) {
          outputSubscriptionIDsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetailsOrBuilder>(
                  outputSubscriptionIDs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          outputSubscriptionIDs_ = null;
        }
        return outputSubscriptionIDsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:SubscriptionsAvailable)
    }
    
    static {
      defaultInstance = new SubscriptionsAvailable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SubscriptionsAvailable)
  }
  
  public interface ISOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .IS.Handshake handshake = 16;
    boolean hasHandshake();
    com.wikispaces.lsfn.Shared.LSFN.IS.Handshake getHandshake();
    
    // optional .Subscribe subscribe = 17;
    boolean hasSubscribe();
    com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe();
    com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder();
    
    // optional string rcon = 18;
    boolean hasRcon();
    String getRcon();
  }
  public static final class IS extends
      com.google.protobuf.GeneratedMessage
      implements ISOrBuilder {
    // Use IS.newBuilder() to construct.
    private IS(Builder builder) {
      super(builder);
    }
    private IS(boolean noInit) {}
    
    private static final IS defaultInstance;
    public static IS getDefaultInstance() {
      return defaultInstance;
    }
    
    public IS getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_IS_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_IS_fieldAccessorTable;
    }
    
    public enum Handshake
        implements com.google.protobuf.ProtocolMessageEnum {
      HELLO(0, 0),
      ;
      
      public static final int HELLO_VALUE = 0;
      
      
      public final int getNumber() { return value; }
      
      public static Handshake valueOf(int value) {
        switch (value) {
          case 0: return HELLO;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Handshake>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Handshake>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Handshake>() {
              public Handshake findValueByNumber(int number) {
                return Handshake.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.IS.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Handshake[] VALUES = {
        HELLO, 
      };
      
      public static Handshake valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Handshake(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:IS.Handshake)
    }
    
    private int bitField0_;
    // optional .IS.Handshake handshake = 16;
    public static final int HANDSHAKE_FIELD_NUMBER = 16;
    private com.wikispaces.lsfn.Shared.LSFN.IS.Handshake handshake_;
    public boolean hasHandshake() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.wikispaces.lsfn.Shared.LSFN.IS.Handshake getHandshake() {
      return handshake_;
    }
    
    // optional .Subscribe subscribe = 17;
    public static final int SUBSCRIBE_FIELD_NUMBER = 17;
    private com.wikispaces.lsfn.Shared.LSFN.Subscribe subscribe_;
    public boolean hasSubscribe() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe() {
      return subscribe_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder() {
      return subscribe_;
    }
    
    // optional string rcon = 18;
    public static final int RCON_FIELD_NUMBER = 18;
    private java.lang.Object rcon_;
    public boolean hasRcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getRcon() {
      java.lang.Object ref = rcon_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          rcon_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRconBytes() {
      java.lang.Object ref = rcon_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        rcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      handshake_ = com.wikispaces.lsfn.Shared.LSFN.IS.Handshake.HELLO;
      subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
      rcon_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(16, handshake_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(17, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(18, getRconBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, handshake_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getRconBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.IS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.IS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.ISOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_IS_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_IS_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.IS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubscribeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        handshake_ = com.wikispaces.lsfn.Shared.LSFN.IS.Handshake.HELLO;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subscribeBuilder_ == null) {
          subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
        } else {
          subscribeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        rcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.IS.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.IS getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.IS.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.IS build() {
        com.wikispaces.lsfn.Shared.LSFN.IS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.IS buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.IS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.IS buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.IS result = new com.wikispaces.lsfn.Shared.LSFN.IS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handshake_ = handshake_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (subscribeBuilder_ == null) {
          result.subscribe_ = subscribe_;
        } else {
          result.subscribe_ = subscribeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rcon_ = rcon_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.IS) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.IS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.IS other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.IS.getDefaultInstance()) return this;
        if (other.hasHandshake()) {
          setHandshake(other.getHandshake());
        }
        if (other.hasSubscribe()) {
          mergeSubscribe(other.getSubscribe());
        }
        if (other.hasRcon()) {
          setRcon(other.getRcon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.wikispaces.lsfn.Shared.LSFN.IS.Handshake value = com.wikispaces.lsfn.Shared.LSFN.IS.Handshake.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                handshake_ = value;
              }
              break;
            }
            case 138: {
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.Subscribe.newBuilder();
              if (hasSubscribe()) {
                subBuilder.mergeFrom(getSubscribe());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubscribe(subBuilder.buildPartial());
              break;
            }
            case 146: {
              bitField0_ |= 0x00000004;
              rcon_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .IS.Handshake handshake = 16;
      private com.wikispaces.lsfn.Shared.LSFN.IS.Handshake handshake_ = com.wikispaces.lsfn.Shared.LSFN.IS.Handshake.HELLO;
      public boolean hasHandshake() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.IS.Handshake getHandshake() {
        return handshake_;
      }
      public Builder setHandshake(com.wikispaces.lsfn.Shared.LSFN.IS.Handshake value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        handshake_ = value;
        onChanged();
        return this;
      }
      public Builder clearHandshake() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handshake_ = com.wikispaces.lsfn.Shared.LSFN.IS.Handshake.HELLO;
        onChanged();
        return this;
      }
      
      // optional .Subscribe subscribe = 17;
      private com.wikispaces.lsfn.Shared.LSFN.Subscribe subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder> subscribeBuilder_;
      public boolean hasSubscribe() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe() {
        if (subscribeBuilder_ == null) {
          return subscribe_;
        } else {
          return subscribeBuilder_.getMessage();
        }
      }
      public Builder setSubscribe(com.wikispaces.lsfn.Shared.LSFN.Subscribe value) {
        if (subscribeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subscribe_ = value;
          onChanged();
        } else {
          subscribeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSubscribe(
          com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder builderForValue) {
        if (subscribeBuilder_ == null) {
          subscribe_ = builderForValue.build();
          onChanged();
        } else {
          subscribeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSubscribe(com.wikispaces.lsfn.Shared.LSFN.Subscribe value) {
        if (subscribeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              subscribe_ != com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance()) {
            subscribe_ =
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.newBuilder(subscribe_).mergeFrom(value).buildPartial();
          } else {
            subscribe_ = value;
          }
          onChanged();
        } else {
          subscribeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSubscribe() {
        if (subscribeBuilder_ == null) {
          subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
          onChanged();
        } else {
          subscribeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder getSubscribeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSubscribeFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder() {
        if (subscribeBuilder_ != null) {
          return subscribeBuilder_.getMessageOrBuilder();
        } else {
          return subscribe_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder> 
          getSubscribeFieldBuilder() {
        if (subscribeBuilder_ == null) {
          subscribeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder>(
                  subscribe_,
                  getParentForChildren(),
                  isClean());
          subscribe_ = null;
        }
        return subscribeBuilder_;
      }
      
      // optional string rcon = 18;
      private java.lang.Object rcon_ = "";
      public boolean hasRcon() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getRcon() {
        java.lang.Object ref = rcon_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          rcon_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRcon(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rcon_ = value;
        onChanged();
        return this;
      }
      public Builder clearRcon() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rcon_ = getDefaultInstance().getRcon();
        onChanged();
        return this;
      }
      void setRcon(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        rcon_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:IS)
    }
    
    static {
      defaultInstance = new IS(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:IS)
  }
  
  public interface SIOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .SI.Handshake handshake = 16;
    boolean hasHandshake();
    com.wikispaces.lsfn.Shared.LSFN.SI.Handshake getHandshake();
    com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder getHandshakeOrBuilder();
    
    // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
    boolean hasSubscriptionsAvailable();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder();
  }
  public static final class SI extends
      com.google.protobuf.GeneratedMessage
      implements SIOrBuilder {
    // Use SI.newBuilder() to construct.
    private SI(Builder builder) {
      super(builder);
    }
    private SI(boolean noInit) {}
    
    private static final SI defaultInstance;
    public static SI getDefaultInstance() {
      return defaultInstance;
    }
    
    public SI getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_fieldAccessorTable;
    }
    
    public interface HandshakeOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required .SI.Handshake.Type type = 1;
      boolean hasType();
      com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type getType();
      
      // optional int32 intID = 2;
      boolean hasIntID();
      int getIntID();
    }
    public static final class Handshake extends
        com.google.protobuf.GeneratedMessage
        implements HandshakeOrBuilder {
      // Use Handshake.newBuilder() to construct.
      private Handshake(Builder builder) {
        super(builder);
      }
      private Handshake(boolean noInit) {}
      
      private static final Handshake defaultInstance;
      public static Handshake getDefaultInstance() {
        return defaultInstance;
      }
      
      public Handshake getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_Handshake_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_Handshake_fieldAccessorTable;
      }
      
      public enum Type
          implements com.google.protobuf.ProtocolMessageEnum {
        HELLO(0, 0),
        GOODBYE(1, 1),
        ;
        
        public static final int HELLO_VALUE = 0;
        public static final int GOODBYE_VALUE = 1;
        
        
        public final int getNumber() { return value; }
        
        public static Type valueOf(int value) {
          switch (value) {
            case 0: return HELLO;
            case 1: return GOODBYE;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.valueOf(number);
                }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final Type[] VALUES = {
          HELLO, GOODBYE, 
        };
        
        public static Type valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        
        private final int index;
        private final int value;
        
        private Type(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:SI.Handshake.Type)
      }
      
      private int bitField0_;
      // required .SI.Handshake.Type type = 1;
      public static final int TYPE_FIELD_NUMBER = 1;
      private com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type type_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type getType() {
        return type_;
      }
      
      // optional int32 intID = 2;
      public static final int INTID_FIELD_NUMBER = 2;
      private int intID_;
      public boolean hasIntID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIntID() {
        return intID_;
      }
      
      private void initFields() {
        type_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type.HELLO;
        intID_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, type_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, intID_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, intID_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.SI.Handshake parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.SI.Handshake prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_Handshake_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_Handshake_fieldAccessorTable;
        }
        
        // Construct using com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          type_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type.HELLO;
          bitField0_ = (bitField0_ & ~0x00000001);
          intID_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDescriptor();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake getDefaultInstanceForType() {
          return com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake build() {
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.wikispaces.lsfn.Shared.LSFN.SI.Handshake buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake buildPartial() {
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake result = new com.wikispaces.lsfn.Shared.LSFN.SI.Handshake(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.intID_ = intID_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.wikispaces.lsfn.Shared.LSFN.SI.Handshake) {
            return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.SI.Handshake)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.SI.Handshake other) {
          if (other == com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasIntID()) {
            setIntID(other.getIntID());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasType()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type value = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                intID_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required .SI.Handshake.Type type = 1;
        private com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type type_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type.HELLO;
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type getType() {
          return type_;
        }
        public Builder setType(com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Type.HELLO;
          onChanged();
          return this;
        }
        
        // optional int32 intID = 2;
        private int intID_ ;
        public boolean hasIntID() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getIntID() {
          return intID_;
        }
        public Builder setIntID(int value) {
          bitField0_ |= 0x00000002;
          intID_ = value;
          onChanged();
          return this;
        }
        public Builder clearIntID() {
          bitField0_ = (bitField0_ & ~0x00000002);
          intID_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:SI.Handshake)
      }
      
      static {
        defaultInstance = new Handshake(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:SI.Handshake)
    }
    
    private int bitField0_;
    // optional .SI.Handshake handshake = 16;
    public static final int HANDSHAKE_FIELD_NUMBER = 16;
    private com.wikispaces.lsfn.Shared.LSFN.SI.Handshake handshake_;
    public boolean hasHandshake() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake getHandshake() {
      return handshake_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder getHandshakeOrBuilder() {
      return handshake_;
    }
    
    // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
    public static final int SUBSCRIPTIONSAVAILABLE_FIELD_NUMBER = 17;
    private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable subscriptionsAvailable_;
    public boolean hasSubscriptionsAvailable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable() {
      return subscriptionsAvailable_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder() {
      return subscriptionsAvailable_;
    }
    
    private void initFields() {
      handshake_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance();
      subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasHandshake()) {
        if (!getHandshake().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSubscriptionsAvailable()) {
        if (!getSubscriptionsAvailable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(16, handshake_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(17, subscriptionsAvailable_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, handshake_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, subscriptionsAvailable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.SI prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.SIOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SI_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.SI.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandshakeFieldBuilder();
          getSubscriptionsAvailableFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (handshakeBuilder_ == null) {
          handshake_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance();
        } else {
          handshakeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
        } else {
          subscriptionsAvailableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SI.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SI getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SI.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SI build() {
        com.wikispaces.lsfn.Shared.LSFN.SI result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.SI buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.SI result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SI buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.SI result = new com.wikispaces.lsfn.Shared.LSFN.SI(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (handshakeBuilder_ == null) {
          result.handshake_ = handshake_;
        } else {
          result.handshake_ = handshakeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (subscriptionsAvailableBuilder_ == null) {
          result.subscriptionsAvailable_ = subscriptionsAvailable_;
        } else {
          result.subscriptionsAvailable_ = subscriptionsAvailableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.SI) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.SI)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.SI other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.SI.getDefaultInstance()) return this;
        if (other.hasHandshake()) {
          mergeHandshake(other.getHandshake());
        }
        if (other.hasSubscriptionsAvailable()) {
          mergeSubscriptionsAvailable(other.getSubscriptionsAvailable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasHandshake()) {
          if (!getHandshake().isInitialized()) {
            
            return false;
          }
        }
        if (hasSubscriptionsAvailable()) {
          if (!getSubscriptionsAvailable().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 130: {
              com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.newBuilder();
              if (hasHandshake()) {
                subBuilder.mergeFrom(getHandshake());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHandshake(subBuilder.buildPartial());
              break;
            }
            case 138: {
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.newBuilder();
              if (hasSubscriptionsAvailable()) {
                subBuilder.mergeFrom(getSubscriptionsAvailable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubscriptionsAvailable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .SI.Handshake handshake = 16;
      private com.wikispaces.lsfn.Shared.LSFN.SI.Handshake handshake_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake, com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder> handshakeBuilder_;
      public boolean hasHandshake() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake getHandshake() {
        if (handshakeBuilder_ == null) {
          return handshake_;
        } else {
          return handshakeBuilder_.getMessage();
        }
      }
      public Builder setHandshake(com.wikispaces.lsfn.Shared.LSFN.SI.Handshake value) {
        if (handshakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handshake_ = value;
          onChanged();
        } else {
          handshakeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setHandshake(
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder builderForValue) {
        if (handshakeBuilder_ == null) {
          handshake_ = builderForValue.build();
          onChanged();
        } else {
          handshakeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeHandshake(com.wikispaces.lsfn.Shared.LSFN.SI.Handshake value) {
        if (handshakeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              handshake_ != com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance()) {
            handshake_ =
              com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.newBuilder(handshake_).mergeFrom(value).buildPartial();
          } else {
            handshake_ = value;
          }
          onChanged();
        } else {
          handshakeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearHandshake() {
        if (handshakeBuilder_ == null) {
          handshake_ = com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.getDefaultInstance();
          onChanged();
        } else {
          handshakeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder getHandshakeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHandshakeFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder getHandshakeOrBuilder() {
        if (handshakeBuilder_ != null) {
          return handshakeBuilder_.getMessageOrBuilder();
        } else {
          return handshake_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SI.Handshake, com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder> 
          getHandshakeFieldBuilder() {
        if (handshakeBuilder_ == null) {
          handshakeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.SI.Handshake, com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.SI.HandshakeOrBuilder>(
                  handshake_,
                  getParentForChildren(),
                  isClean());
          handshake_ = null;
        }
        return handshakeBuilder_;
      }
      
      // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
      private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder> subscriptionsAvailableBuilder_;
      public boolean hasSubscriptionsAvailable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable() {
        if (subscriptionsAvailableBuilder_ == null) {
          return subscriptionsAvailable_;
        } else {
          return subscriptionsAvailableBuilder_.getMessage();
        }
      }
      public Builder setSubscriptionsAvailable(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable value) {
        if (subscriptionsAvailableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subscriptionsAvailable_ = value;
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSubscriptionsAvailable(
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder builderForValue) {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = builderForValue.build();
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSubscriptionsAvailable(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable value) {
        if (subscriptionsAvailableBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              subscriptionsAvailable_ != com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance()) {
            subscriptionsAvailable_ =
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.newBuilder(subscriptionsAvailable_).mergeFrom(value).buildPartial();
          } else {
            subscriptionsAvailable_ = value;
          }
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSubscriptionsAvailable() {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder getSubscriptionsAvailableBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSubscriptionsAvailableFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder() {
        if (subscriptionsAvailableBuilder_ != null) {
          return subscriptionsAvailableBuilder_.getMessageOrBuilder();
        } else {
          return subscriptionsAvailable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder> 
          getSubscriptionsAvailableFieldBuilder() {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder>(
                  subscriptionsAvailable_,
                  getParentForChildren(),
                  isClean());
          subscriptionsAvailable_ = null;
        }
        return subscriptionsAvailableBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:SI)
    }
    
    static {
      defaultInstance = new SI(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SI)
  }
  
  public interface SEOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .SE.Handshake handshake = 16;
    boolean hasHandshake();
    com.wikispaces.lsfn.Shared.LSFN.SE.Handshake getHandshake();
    
    // optional .Subscribe subscribe = 17;
    boolean hasSubscribe();
    com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe();
    com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder();
    
    // optional string rcon = 18;
    boolean hasRcon();
    String getRcon();
  }
  public static final class SE extends
      com.google.protobuf.GeneratedMessage
      implements SEOrBuilder {
    // Use SE.newBuilder() to construct.
    private SE(Builder builder) {
      super(builder);
    }
    private SE(boolean noInit) {}
    
    private static final SE defaultInstance;
    public static SE getDefaultInstance() {
      return defaultInstance;
    }
    
    public SE getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SE_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_SE_fieldAccessorTable;
    }
    
    public enum Handshake
        implements com.google.protobuf.ProtocolMessageEnum {
      HELLO(0, 0),
      ;
      
      public static final int HELLO_VALUE = 0;
      
      
      public final int getNumber() { return value; }
      
      public static Handshake valueOf(int value) {
        switch (value) {
          case 0: return HELLO;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Handshake>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Handshake>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Handshake>() {
              public Handshake findValueByNumber(int number) {
                return Handshake.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.SE.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Handshake[] VALUES = {
        HELLO, 
      };
      
      public static Handshake valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Handshake(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:SE.Handshake)
    }
    
    private int bitField0_;
    // optional .SE.Handshake handshake = 16;
    public static final int HANDSHAKE_FIELD_NUMBER = 16;
    private com.wikispaces.lsfn.Shared.LSFN.SE.Handshake handshake_;
    public boolean hasHandshake() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SE.Handshake getHandshake() {
      return handshake_;
    }
    
    // optional .Subscribe subscribe = 17;
    public static final int SUBSCRIBE_FIELD_NUMBER = 17;
    private com.wikispaces.lsfn.Shared.LSFN.Subscribe subscribe_;
    public boolean hasSubscribe() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe() {
      return subscribe_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder() {
      return subscribe_;
    }
    
    // optional string rcon = 18;
    public static final int RCON_FIELD_NUMBER = 18;
    private java.lang.Object rcon_;
    public boolean hasRcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getRcon() {
      java.lang.Object ref = rcon_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          rcon_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRconBytes() {
      java.lang.Object ref = rcon_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        rcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      handshake_ = com.wikispaces.lsfn.Shared.LSFN.SE.Handshake.HELLO;
      subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
      rcon_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(16, handshake_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(17, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(18, getRconBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, handshake_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getRconBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.SE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.SE prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.SEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SE_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_SE_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.SE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubscribeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        handshake_ = com.wikispaces.lsfn.Shared.LSFN.SE.Handshake.HELLO;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subscribeBuilder_ == null) {
          subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
        } else {
          subscribeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        rcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SE.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SE getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.SE.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SE build() {
        com.wikispaces.lsfn.Shared.LSFN.SE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.SE buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.SE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.SE buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.SE result = new com.wikispaces.lsfn.Shared.LSFN.SE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handshake_ = handshake_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (subscribeBuilder_ == null) {
          result.subscribe_ = subscribe_;
        } else {
          result.subscribe_ = subscribeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rcon_ = rcon_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.SE) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.SE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.SE other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.SE.getDefaultInstance()) return this;
        if (other.hasHandshake()) {
          setHandshake(other.getHandshake());
        }
        if (other.hasSubscribe()) {
          mergeSubscribe(other.getSubscribe());
        }
        if (other.hasRcon()) {
          setRcon(other.getRcon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.wikispaces.lsfn.Shared.LSFN.SE.Handshake value = com.wikispaces.lsfn.Shared.LSFN.SE.Handshake.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                handshake_ = value;
              }
              break;
            }
            case 138: {
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.Subscribe.newBuilder();
              if (hasSubscribe()) {
                subBuilder.mergeFrom(getSubscribe());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubscribe(subBuilder.buildPartial());
              break;
            }
            case 146: {
              bitField0_ |= 0x00000004;
              rcon_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .SE.Handshake handshake = 16;
      private com.wikispaces.lsfn.Shared.LSFN.SE.Handshake handshake_ = com.wikispaces.lsfn.Shared.LSFN.SE.Handshake.HELLO;
      public boolean hasHandshake() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SE.Handshake getHandshake() {
        return handshake_;
      }
      public Builder setHandshake(com.wikispaces.lsfn.Shared.LSFN.SE.Handshake value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        handshake_ = value;
        onChanged();
        return this;
      }
      public Builder clearHandshake() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handshake_ = com.wikispaces.lsfn.Shared.LSFN.SE.Handshake.HELLO;
        onChanged();
        return this;
      }
      
      // optional .Subscribe subscribe = 17;
      private com.wikispaces.lsfn.Shared.LSFN.Subscribe subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder> subscribeBuilder_;
      public boolean hasSubscribe() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe getSubscribe() {
        if (subscribeBuilder_ == null) {
          return subscribe_;
        } else {
          return subscribeBuilder_.getMessage();
        }
      }
      public Builder setSubscribe(com.wikispaces.lsfn.Shared.LSFN.Subscribe value) {
        if (subscribeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subscribe_ = value;
          onChanged();
        } else {
          subscribeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSubscribe(
          com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder builderForValue) {
        if (subscribeBuilder_ == null) {
          subscribe_ = builderForValue.build();
          onChanged();
        } else {
          subscribeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSubscribe(com.wikispaces.lsfn.Shared.LSFN.Subscribe value) {
        if (subscribeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              subscribe_ != com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance()) {
            subscribe_ =
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.newBuilder(subscribe_).mergeFrom(value).buildPartial();
          } else {
            subscribe_ = value;
          }
          onChanged();
        } else {
          subscribeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSubscribe() {
        if (subscribeBuilder_ == null) {
          subscribe_ = com.wikispaces.lsfn.Shared.LSFN.Subscribe.getDefaultInstance();
          onChanged();
        } else {
          subscribeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder getSubscribeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSubscribeFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder getSubscribeOrBuilder() {
        if (subscribeBuilder_ != null) {
          return subscribeBuilder_.getMessageOrBuilder();
        } else {
          return subscribe_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder> 
          getSubscribeFieldBuilder() {
        if (subscribeBuilder_ == null) {
          subscribeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.Subscribe, com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscribeOrBuilder>(
                  subscribe_,
                  getParentForChildren(),
                  isClean());
          subscribe_ = null;
        }
        return subscribeBuilder_;
      }
      
      // optional string rcon = 18;
      private java.lang.Object rcon_ = "";
      public boolean hasRcon() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getRcon() {
        java.lang.Object ref = rcon_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          rcon_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRcon(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rcon_ = value;
        onChanged();
        return this;
      }
      public Builder clearRcon() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rcon_ = getDefaultInstance().getRcon();
        onChanged();
        return this;
      }
      void setRcon(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        rcon_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:SE)
    }
    
    static {
      defaultInstance = new SE(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SE)
  }
  
  public interface ESOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .ES.Handshake handshake = 16;
    boolean hasHandshake();
    com.wikispaces.lsfn.Shared.LSFN.ES.Handshake getHandshake();
    com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder getHandshakeOrBuilder();
    
    // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
    boolean hasSubscriptionsAvailable();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable();
    com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder();
  }
  public static final class ES extends
      com.google.protobuf.GeneratedMessage
      implements ESOrBuilder {
    // Use ES.newBuilder() to construct.
    private ES(Builder builder) {
      super(builder);
    }
    private ES(boolean noInit) {}
    
    private static final ES defaultInstance;
    public static ES getDefaultInstance() {
      return defaultInstance;
    }
    
    public ES getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_fieldAccessorTable;
    }
    
    public interface HandshakeOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required .ES.Handshake.Type type = 1;
      boolean hasType();
      com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type getType();
      
      // optional int32 shipID = 2;
      boolean hasShipID();
      int getShipID();
    }
    public static final class Handshake extends
        com.google.protobuf.GeneratedMessage
        implements HandshakeOrBuilder {
      // Use Handshake.newBuilder() to construct.
      private Handshake(Builder builder) {
        super(builder);
      }
      private Handshake(boolean noInit) {}
      
      private static final Handshake defaultInstance;
      public static Handshake getDefaultInstance() {
        return defaultInstance;
      }
      
      public Handshake getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_Handshake_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_Handshake_fieldAccessorTable;
      }
      
      public enum Type
          implements com.google.protobuf.ProtocolMessageEnum {
        HELLO(0, 0),
        GOODBYE(1, 1),
        ;
        
        public static final int HELLO_VALUE = 0;
        public static final int GOODBYE_VALUE = 1;
        
        
        public final int getNumber() { return value; }
        
        public static Type valueOf(int value) {
          switch (value) {
            case 0: return HELLO;
            case 1: return GOODBYE;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.valueOf(number);
                }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final Type[] VALUES = {
          HELLO, GOODBYE, 
        };
        
        public static Type valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        
        private final int index;
        private final int value;
        
        private Type(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:ES.Handshake.Type)
      }
      
      private int bitField0_;
      // required .ES.Handshake.Type type = 1;
      public static final int TYPE_FIELD_NUMBER = 1;
      private com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type type_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type getType() {
        return type_;
      }
      
      // optional int32 shipID = 2;
      public static final int SHIPID_FIELD_NUMBER = 2;
      private int shipID_;
      public boolean hasShipID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getShipID() {
        return shipID_;
      }
      
      private void initFields() {
        type_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type.HELLO;
        shipID_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, type_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, shipID_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, shipID_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.wikispaces.lsfn.Shared.LSFN.ES.Handshake parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.ES.Handshake prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_Handshake_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_Handshake_fieldAccessorTable;
        }
        
        // Construct using com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          type_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type.HELLO;
          bitField0_ = (bitField0_ & ~0x00000001);
          shipID_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDescriptor();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake getDefaultInstanceForType() {
          return com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance();
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake build() {
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.wikispaces.lsfn.Shared.LSFN.ES.Handshake buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake buildPartial() {
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake result = new com.wikispaces.lsfn.Shared.LSFN.ES.Handshake(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shipID_ = shipID_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.wikispaces.lsfn.Shared.LSFN.ES.Handshake) {
            return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.ES.Handshake)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.ES.Handshake other) {
          if (other == com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasShipID()) {
            setShipID(other.getShipID());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasType()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type value = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                shipID_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required .ES.Handshake.Type type = 1;
        private com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type type_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type.HELLO;
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type getType() {
          return type_;
        }
        public Builder setType(com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Type.HELLO;
          onChanged();
          return this;
        }
        
        // optional int32 shipID = 2;
        private int shipID_ ;
        public boolean hasShipID() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getShipID() {
          return shipID_;
        }
        public Builder setShipID(int value) {
          bitField0_ |= 0x00000002;
          shipID_ = value;
          onChanged();
          return this;
        }
        public Builder clearShipID() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shipID_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:ES.Handshake)
      }
      
      static {
        defaultInstance = new Handshake(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ES.Handshake)
    }
    
    private int bitField0_;
    // optional .ES.Handshake handshake = 16;
    public static final int HANDSHAKE_FIELD_NUMBER = 16;
    private com.wikispaces.lsfn.Shared.LSFN.ES.Handshake handshake_;
    public boolean hasHandshake() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake getHandshake() {
      return handshake_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder getHandshakeOrBuilder() {
      return handshake_;
    }
    
    // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
    public static final int SUBSCRIPTIONSAVAILABLE_FIELD_NUMBER = 17;
    private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable subscriptionsAvailable_;
    public boolean hasSubscriptionsAvailable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable() {
      return subscriptionsAvailable_;
    }
    public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder() {
      return subscriptionsAvailable_;
    }
    
    private void initFields() {
      handshake_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance();
      subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasHandshake()) {
        if (!getHandshake().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSubscriptionsAvailable()) {
        if (!getSubscriptionsAvailable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(16, handshake_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(17, subscriptionsAvailable_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, handshake_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, subscriptionsAvailable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.wikispaces.lsfn.Shared.LSFN.ES parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wikispaces.lsfn.Shared.LSFN.ES prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wikispaces.lsfn.Shared.LSFN.ESOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wikispaces.lsfn.Shared.LSFN.internal_static_ES_fieldAccessorTable;
      }
      
      // Construct using com.wikispaces.lsfn.Shared.LSFN.ES.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandshakeFieldBuilder();
          getSubscriptionsAvailableFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (handshakeBuilder_ == null) {
          handshake_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance();
        } else {
          handshakeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
        } else {
          subscriptionsAvailableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wikispaces.lsfn.Shared.LSFN.ES.getDescriptor();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.ES getDefaultInstanceForType() {
        return com.wikispaces.lsfn.Shared.LSFN.ES.getDefaultInstance();
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.ES build() {
        com.wikispaces.lsfn.Shared.LSFN.ES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.wikispaces.lsfn.Shared.LSFN.ES buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.wikispaces.lsfn.Shared.LSFN.ES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.wikispaces.lsfn.Shared.LSFN.ES buildPartial() {
        com.wikispaces.lsfn.Shared.LSFN.ES result = new com.wikispaces.lsfn.Shared.LSFN.ES(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (handshakeBuilder_ == null) {
          result.handshake_ = handshake_;
        } else {
          result.handshake_ = handshakeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (subscriptionsAvailableBuilder_ == null) {
          result.subscriptionsAvailable_ = subscriptionsAvailable_;
        } else {
          result.subscriptionsAvailable_ = subscriptionsAvailableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wikispaces.lsfn.Shared.LSFN.ES) {
          return mergeFrom((com.wikispaces.lsfn.Shared.LSFN.ES)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.wikispaces.lsfn.Shared.LSFN.ES other) {
        if (other == com.wikispaces.lsfn.Shared.LSFN.ES.getDefaultInstance()) return this;
        if (other.hasHandshake()) {
          mergeHandshake(other.getHandshake());
        }
        if (other.hasSubscriptionsAvailable()) {
          mergeSubscriptionsAvailable(other.getSubscriptionsAvailable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasHandshake()) {
          if (!getHandshake().isInitialized()) {
            
            return false;
          }
        }
        if (hasSubscriptionsAvailable()) {
          if (!getSubscriptionsAvailable().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 130: {
              com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.newBuilder();
              if (hasHandshake()) {
                subBuilder.mergeFrom(getHandshake());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHandshake(subBuilder.buildPartial());
              break;
            }
            case 138: {
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder subBuilder = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.newBuilder();
              if (hasSubscriptionsAvailable()) {
                subBuilder.mergeFrom(getSubscriptionsAvailable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubscriptionsAvailable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .ES.Handshake handshake = 16;
      private com.wikispaces.lsfn.Shared.LSFN.ES.Handshake handshake_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake, com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder> handshakeBuilder_;
      public boolean hasHandshake() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake getHandshake() {
        if (handshakeBuilder_ == null) {
          return handshake_;
        } else {
          return handshakeBuilder_.getMessage();
        }
      }
      public Builder setHandshake(com.wikispaces.lsfn.Shared.LSFN.ES.Handshake value) {
        if (handshakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handshake_ = value;
          onChanged();
        } else {
          handshakeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setHandshake(
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder builderForValue) {
        if (handshakeBuilder_ == null) {
          handshake_ = builderForValue.build();
          onChanged();
        } else {
          handshakeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeHandshake(com.wikispaces.lsfn.Shared.LSFN.ES.Handshake value) {
        if (handshakeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              handshake_ != com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance()) {
            handshake_ =
              com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.newBuilder(handshake_).mergeFrom(value).buildPartial();
          } else {
            handshake_ = value;
          }
          onChanged();
        } else {
          handshakeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearHandshake() {
        if (handshakeBuilder_ == null) {
          handshake_ = com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.getDefaultInstance();
          onChanged();
        } else {
          handshakeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder getHandshakeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHandshakeFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder getHandshakeOrBuilder() {
        if (handshakeBuilder_ != null) {
          return handshakeBuilder_.getMessageOrBuilder();
        } else {
          return handshake_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.ES.Handshake, com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder> 
          getHandshakeFieldBuilder() {
        if (handshakeBuilder_ == null) {
          handshakeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.ES.Handshake, com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder, com.wikispaces.lsfn.Shared.LSFN.ES.HandshakeOrBuilder>(
                  handshake_,
                  getParentForChildren(),
                  isClean());
          handshake_ = null;
        }
        return handshakeBuilder_;
      }
      
      // optional .SubscriptionsAvailable subscriptionsAvailable = 17;
      private com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder> subscriptionsAvailableBuilder_;
      public boolean hasSubscriptionsAvailable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable getSubscriptionsAvailable() {
        if (subscriptionsAvailableBuilder_ == null) {
          return subscriptionsAvailable_;
        } else {
          return subscriptionsAvailableBuilder_.getMessage();
        }
      }
      public Builder setSubscriptionsAvailable(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable value) {
        if (subscriptionsAvailableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subscriptionsAvailable_ = value;
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSubscriptionsAvailable(
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder builderForValue) {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = builderForValue.build();
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSubscriptionsAvailable(com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable value) {
        if (subscriptionsAvailableBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              subscriptionsAvailable_ != com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance()) {
            subscriptionsAvailable_ =
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.newBuilder(subscriptionsAvailable_).mergeFrom(value).buildPartial();
          } else {
            subscriptionsAvailable_ = value;
          }
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSubscriptionsAvailable() {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailable_ = com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.getDefaultInstance();
          onChanged();
        } else {
          subscriptionsAvailableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder getSubscriptionsAvailableBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSubscriptionsAvailableFieldBuilder().getBuilder();
      }
      public com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder getSubscriptionsAvailableOrBuilder() {
        if (subscriptionsAvailableBuilder_ != null) {
          return subscriptionsAvailableBuilder_.getMessageOrBuilder();
        } else {
          return subscriptionsAvailable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder> 
          getSubscriptionsAvailableFieldBuilder() {
        if (subscriptionsAvailableBuilder_ == null) {
          subscriptionsAvailableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder, com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailableOrBuilder>(
                  subscriptionsAvailable_,
                  getParentForChildren(),
                  isClean());
          subscriptionsAvailable_ = null;
        }
        return subscriptionsAvailableBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:ES)
    }
    
    static {
      defaultInstance = new ES(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ES)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Subscribe_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Subscribe_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SubscriptionsAvailable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SubscriptionsAvailable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SubscriptionsAvailable_ValueDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SubscriptionsAvailable_ValueDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_IS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IS_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SI_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SI_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SI_Handshake_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SI_Handshake_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SE_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SE_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ES_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ES_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ES_Handshake_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ES_Handshake_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)src/com/wikispaces/lsfn/Shared/LSFN.pr" +
      "oto\"H\n\tSubscribe\022\034\n\024inputSubscriptionIDs" +
      "\030\001 \003(\005\022\035\n\025outputSubscriptionIDs\030\002 \003(\005\"\313\001" +
      "\n\026SubscriptionsAvailable\022B\n\024inputSubscri" +
      "ptionIDs\030\001 \003(\0132$.SubscriptionsAvailable." +
      "ValueDetails\022C\n\025outputSubscriptionIDs\030\002 " +
      "\003(\0132$.SubscriptionsAvailable.ValueDetail" +
      "s\032(\n\014ValueDetails\022\014\n\004name\030\001 \002(\t\022\n\n\002ID\030\002 " +
      "\002(\005\"k\n\002IS\022 \n\thandshake\030\020 \001(\0162\r.IS.Handsh" +
      "ake\022\035\n\tsubscribe\030\021 \001(\0132\n.Subscribe\022\014\n\004rc",
      "on\030\022 \001(\t\"\026\n\tHandshake\022\t\n\005HELLO\020\000\"\275\001\n\002SI\022" +
      " \n\thandshake\030\020 \001(\0132\r.SI.Handshake\0227\n\026sub" +
      "scriptionsAvailable\030\021 \001(\0132\027.Subscription" +
      "sAvailable\032\\\n\tHandshake\022 \n\004type\030\001 \002(\0162\022." +
      "SI.Handshake.Type\022\r\n\005intID\030\002 \001(\005\"\036\n\004Type" +
      "\022\t\n\005HELLO\020\000\022\013\n\007GOODBYE\020\001\"k\n\002SE\022 \n\thandsh" +
      "ake\030\020 \001(\0162\r.SE.Handshake\022\035\n\tsubscribe\030\021 " +
      "\001(\0132\n.Subscribe\022\014\n\004rcon\030\022 \001(\t\"\026\n\tHandsha" +
      "ke\022\t\n\005HELLO\020\000\"\276\001\n\002ES\022 \n\thandshake\030\020 \001(\0132" +
      "\r.ES.Handshake\0227\n\026subscriptionsAvailable",
      "\030\021 \001(\0132\027.SubscriptionsAvailable\032]\n\tHands" +
      "hake\022 \n\004type\030\001 \002(\0162\022.ES.Handshake.Type\022\016" +
      "\n\006shipID\030\002 \001(\005\"\036\n\004Type\022\t\n\005HELLO\020\000\022\013\n\007GOO" +
      "DBYE\020\001B\"\n\032com.wikispaces.lsfn.SharedB\004LS" +
      "FN"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Subscribe_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Subscribe_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Subscribe_descriptor,
              new java.lang.String[] { "InputSubscriptionIDs", "OutputSubscriptionIDs", },
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.class,
              com.wikispaces.lsfn.Shared.LSFN.Subscribe.Builder.class);
          internal_static_SubscriptionsAvailable_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_SubscriptionsAvailable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SubscriptionsAvailable_descriptor,
              new java.lang.String[] { "InputSubscriptionIDs", "OutputSubscriptionIDs", },
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.class,
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.Builder.class);
          internal_static_SubscriptionsAvailable_ValueDetails_descriptor =
            internal_static_SubscriptionsAvailable_descriptor.getNestedTypes().get(0);
          internal_static_SubscriptionsAvailable_ValueDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SubscriptionsAvailable_ValueDetails_descriptor,
              new java.lang.String[] { "Name", "ID", },
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.class,
              com.wikispaces.lsfn.Shared.LSFN.SubscriptionsAvailable.ValueDetails.Builder.class);
          internal_static_IS_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_IS_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_IS_descriptor,
              new java.lang.String[] { "Handshake", "Subscribe", "Rcon", },
              com.wikispaces.lsfn.Shared.LSFN.IS.class,
              com.wikispaces.lsfn.Shared.LSFN.IS.Builder.class);
          internal_static_SI_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_SI_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SI_descriptor,
              new java.lang.String[] { "Handshake", "SubscriptionsAvailable", },
              com.wikispaces.lsfn.Shared.LSFN.SI.class,
              com.wikispaces.lsfn.Shared.LSFN.SI.Builder.class);
          internal_static_SI_Handshake_descriptor =
            internal_static_SI_descriptor.getNestedTypes().get(0);
          internal_static_SI_Handshake_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SI_Handshake_descriptor,
              new java.lang.String[] { "Type", "IntID", },
              com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.class,
              com.wikispaces.lsfn.Shared.LSFN.SI.Handshake.Builder.class);
          internal_static_SE_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_SE_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SE_descriptor,
              new java.lang.String[] { "Handshake", "Subscribe", "Rcon", },
              com.wikispaces.lsfn.Shared.LSFN.SE.class,
              com.wikispaces.lsfn.Shared.LSFN.SE.Builder.class);
          internal_static_ES_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_ES_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ES_descriptor,
              new java.lang.String[] { "Handshake", "SubscriptionsAvailable", },
              com.wikispaces.lsfn.Shared.LSFN.ES.class,
              com.wikispaces.lsfn.Shared.LSFN.ES.Builder.class);
          internal_static_ES_Handshake_descriptor =
            internal_static_ES_descriptor.getNestedTypes().get(0);
          internal_static_ES_Handshake_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ES_Handshake_descriptor,
              new java.lang.String[] { "Type", "ShipID", },
              com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.class,
              com.wikispaces.lsfn.Shared.LSFN.ES.Handshake.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
